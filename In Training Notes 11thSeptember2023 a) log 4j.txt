I) Log 4j Topic – 11/9/2023 - 
 
Ref Website - https://www.browserstack.com/guide/log4j-in-selenium
 
1) Purpose of Logging your tests results. 
2) We have previously seen HTML reports before but it not Logs.
3) From recently they are using log 4j 2 as a latest version.
 
4) What is Logging ? Defined.
 
Logging is a process that takes applications to a newer level with information logs on how the applications may or may not have performed/executed. It gives an exact idea of software performance, including any shortcomings.
 
Log4j in Selenium is one such logging framework that helps in gathering information in the form of logs or log files.
 
PURPOSE OF LOGGING - 
 
5) What is Log4j in Selenium?
 
Log4j is a logging framework written in Java that provides an easy way for logging in Selenium. In a nutshell, the framework gives out information about everything that goes on during the software execution.
 
Log4j also provides insight into anything that may have gone wrong during software execution or automation. Overall, Log4j documents the output in the form of logs that can be examined later for purposes such as auditing small and large-scale Selenium projects.
 
Let’s take a look at the various components of the Log4j logging framework.
 
6) Components of Log4j - 
 
The Log4j logging framework comprises the following components:
 
a) Logger
b) Appenders
c) Layout
 
7) a) Logger - 
 
The function of the logger in Log4j is basically storing and capturing all the necessary logging information that will be generated using the framework.
 
To truly understand its functioning, let’s dig a little deeper and discuss the logger class, and log level methods. The loggers also decide which priority is going to be captured.
 
Logger has logger class & logger levels
 
Logger Class – To fully use the logger, create an instance for a logger class where all the generic methods will be at the user’s disposal, required to use Log4j.

Log Levels – These are the methods that will be used to print the log messages. There are primarily only a few log levels that are used in a script.

Log 4j methods - 

ALL – This level will prioritize and include everything in the logs.

ERROR – This level will show messages that inform users about error events that may not stop the application.

WARN – This level will show information regarding warnings, that may not stop the execution but may still cause problems.

DEBUG – This level will log debugging information.

INFO – This level will log the progress of the application.

FATAL – This will print information critical to the system that may even crash the application.
 
Log 4j 2 latest methods Logger Levels - 
 
OFF
 c
FATAL
 
ERROR - To start logging messaegs using this basic configuration all you need to is to obtain a logger instance using the Log Manage class.
 
WARN
 
INFO - private static Loggefr logger = LogManager.getLogger(MyService.class);
Then you can use the logger object with methods corresponding to the log level you want.
 
DEBUG
 
TRACE - logger.error("This is an error message");

8) Steps to successfully run log 4j version 2 with Selenium WebDriver.
How to Use Log4j in Selenium
Follow the steps below to successfully run Log4j with Selenium Webdriver:

1) Write an automation script, such as the one in the example below. It is a simple script that opens a URL, send keys to username and password, and ends the script when it clicks the login button.
2) After creating the script, create a log4j.properties file and specify the root logger, appended, and layout information in the file.
3) Import log4j dependencies like Logger, PropertyConfigurator, and add them to the script along with the logger class.
4) Add the messages that will be displayed in the log file.

**With respect to an example program we had to 
i) first create a 'log' reference variable using 'public static Logger log;' before @BeforeTest Annotation.
ii) log instance is created using 'log = LogManager.getLogger(Login.class)' inside the function that is written in @BeforeTest.
iii) Then log.info("Opening Google") message is recorded after running the website & opening "google.com".
iv) log.error ("Our_Message") is also added which is to be added in the catch block of try --- catch block for error handling
v) Then we simply follow the process written above in Step 2 , 3 , 4.

9) Appenders

The appender basically grabs information from the logger and writes log messages to a file or any other storage location. 

The following are some of the appenders one can use for Log4j:

i) FileAppender – This will append the log messages to a file.

ii) RollingFileAppender – It will perform the same function as FileAppender, but users will be able to specify the maximum file size. Once the limit is exceeded, the appender will create another file to write the messages.

iii) DailyRollingFileAppender – It specifies the frequency by which the messages are to be written to the file.

iv) ConsoleAppender – In this, the appender will simply write the log messages in the console.

10) Layout

The layout is where the format in which log messages will appear is decided. There are several layouts one can use for log messages:

i) Pattern Layout – The user must specify a conversion pattern based on which the logs will be displayed. Otherwise, it takes the default conversion pattern in case of “no pattern specified”.

ii) HTML Layout – In this layout, the format of logs will be in the form of an HTML table.

iii) XML Layout – This will show the logs in an XML format.

Now, let’s take a look at how to download and set up Log4j.

**Why we require properties file in log?
To configure the 3 components of log4j.

11) Log4j with Properties File Configuration
The properties configuration file will contain the information regarding the following:

a) The first objective is to identify the log level and the destination where the log will be written. In this case, the log level is the DEBUG level and a file is the destination.

b) The next step is to establish an appender. This example uses a RollingFIleAppender with a maximum capacity of 2MB and the file location is also specified in this section. The MaxBackupIndex is the number of files that will be created in case the file size is exceeded.

c) The last section contains the layout in which a format is specified. This example uses PatternLayout. And, since we have not used a conversion pattern here, it will take the default conversion pattern into account.

***layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n


12) Why Use Log4j in Selenium ?

*Use Log4j logging framework in Selenium for the following reasons :-

	1) Log4j logging framework can help in debugging applications easily. With different log levels, it becomes easier to sort information based on categories.

	2) The logging framework is open source and can help in logging in different log levels and suppress logs in different environments – which ultimately improves application performance.

	3) The framework produces better output in general.

	4) With three components and clarity in usage, it becomes easier to use and configure log4j in Selenium.

	5) The setup is easy and free of cost, making it more accessible for faster debugging.









 
 
 

